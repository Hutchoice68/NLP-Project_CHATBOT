import pandas as pd
import random

# ---------- Intent Definition ----------
intents = {
    "ask_info": [
        "‡∏Ç‡∏≠‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏´‡∏ô‡πà‡∏≠‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö", "‡πÄ‡∏≠‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏ô‡πà‡∏≠‡∏¢", "‡∏≠‡∏¢‡∏≤‡∏Å‡∏£‡∏π‡πâ‡∏£‡∏≤‡∏Ñ‡∏≤", "‡∏Ç‡∏≠‡∏£‡∏≤‡∏Ñ‡∏≤", 
        "‡∏°‡∏µ‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô‡πÑ‡∏´‡∏°", "‡∏ä‡πà‡∏ß‡∏¢‡∏ö‡∏≠‡∏Å‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏ó‡∏µ", "‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏°‡∏µ‡∏™‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡∏ö‡πâ‡∏≤‡∏á", 
        "‡∏≠‡∏¢‡∏≤‡∏Å‡∏î‡∏π‡∏™‡πÄ‡∏õ‡∏Ñ", "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏°‡∏µ‡πÑ‡∏´‡∏°", "‡∏≠‡∏¢‡∏≤‡∏Å‡∏£‡∏π‡πâ‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô",
        "‡∏Ç‡∏≠ spec ‡∏´‡∏ô‡πà‡∏≠‡∏¢", "‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏°‡∏µ‡∏°‡∏±‡πâ‡∏¢", "‡∏≠‡∏¢‡∏≤‡∏Å‡∏£‡∏π‡πâ‡∏Ç‡∏≠‡∏á‡πÅ‡∏ó‡πâ‡πÑ‡∏´‡∏°", "‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Å‡∏µ‡πà‡∏ö‡∏≤‡∏ó", "‡πÇ‡∏õ‡∏£‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏∞‡πÑ‡∏£"
    ],
    "order_product": [
        "‡∏ã‡∏∑‡πâ‡∏≠‡πÄ‡∏•‡∏¢", "‡∏Ç‡∏≠‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠", "‡∏≠‡∏¢‡∏≤‡∏Å‡πÑ‡∏î‡πâ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ô‡∏µ‡πâ", "Add to cart", "‡∏™‡∏±‡πà‡∏á‡πÄ‡∏•‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö",
        "‡∏™‡∏±‡πà‡∏á‡∏Ç‡∏≠‡∏á", "‡∏Ç‡∏≠‡∏™‡∏±‡πà‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏≠‡∏µ‡∏Å‡∏ä‡∏¥‡πâ‡∏ô", "‡∏≠‡∏¢‡∏≤‡∏Å‡∏ã‡∏∑‡πâ‡∏≠‡∏≠‡∏µ‡∏Å", "‡∏°‡∏µ‡∏Ç‡∏≠‡∏á‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡πà‡∏á‡πÑ‡∏´‡∏°", "‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ‡πÑ‡∏´‡∏°",
        "Order now", "‡∏≠‡∏¢‡∏≤‡∏Å‡πÑ‡∏î‡πâ‡∏î‡πà‡∏ß‡∏ô", "CF ‡∏Ñ‡πà‡∏∞", "‡∏û‡∏£‡∏µ‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÑ‡∏î‡πâ‡πÑ‡∏´‡∏°", "‡∏≠‡∏¢‡∏≤‡∏Å‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏•‡∏¢"
    ],
    "refund_request": [
        "‡∏Ç‡∏≠‡∏Ñ‡∏∑‡∏ô‡πÄ‡∏á‡∏¥‡∏ô", "‡∏Ç‡∏≠‡∏á‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤", "‡∏≠‡∏¢‡∏≤‡∏Å‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", "‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏™‡∏µ‡∏¢", "‡∏Ñ‡∏∑‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏î‡πâ‡πÑ‡∏´‡∏°",
        "‡∏Ç‡∏≠‡πÄ‡∏á‡∏¥‡∏ô‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡∏£‡∏±‡∏ö", "‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏°‡∏µ‡∏ï‡∏≥‡∏´‡∏ô‡∏¥", "‡∏™‡πà‡∏á‡∏Ç‡∏≠‡∏á‡∏ú‡∏¥‡∏î", "‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ç‡∏≠‡∏á‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö", "‡∏≠‡∏¢‡∏≤‡∏Å‡πÅ‡∏à‡πâ‡∏á‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Å‡∏≤‡∏£‡∏Ñ‡∏∑‡∏ô‡πÄ‡∏á‡∏¥‡∏ô",
        "‡∏Ñ‡∏∑‡∏ô‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡πà‡∏≠‡∏¢", "‡∏Ç‡∏≠‡∏á‡∏û‡∏±‡∏á", "‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏õ‡∏Å‡πÄ‡∏•‡∏¢", "‡πÑ‡∏°‡πà‡∏≠‡∏¢‡∏≤‡∏Å‡πÑ‡∏î‡πâ‡πÅ‡∏•‡πâ‡∏ß", "‡∏™‡πà‡∏á‡∏Ñ‡∏∑‡∏ô‡∏¢‡∏±‡∏á‡πÑ‡∏á"
    ],
    "help_request": [
        "‡∏ä‡πà‡∏ß‡∏¢‡∏î‡πâ‡∏ß‡∏¢", "‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏´‡∏ô‡πà‡∏≠‡∏¢", "‡πÉ‡∏ä‡πâ‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô", "‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô", "‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ",
        "‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô", "‡∏£‡∏∞‡∏ö‡∏ö error", "‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ", "‡∏£‡∏ö‡∏Å‡∏ß‡∏ô‡∏ä‡πà‡∏ß‡∏¢‡πÅ‡∏Å‡πâ‡∏õ‡∏±‡∏ç‡∏´‡∏≤", "‡∏Ç‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏´‡∏ô‡πà‡∏≠‡∏¢",
        "‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ", "‡∏Ç‡∏∂‡πâ‡∏ô error code", "‡∏£‡∏ö‡∏Å‡∏ß‡∏ô‡∏´‡∏ô‡πà‡∏≠‡∏¢‡∏Ñ‡πà‡∏∞", "‡∏ó‡∏≥‡πÑ‡∏á‡∏î‡∏µ‡∏Ñ‡∏∞", "‡∏£‡∏ö‡∏Å‡∏ß‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡∏´‡∏ô‡πà‡∏≠‡∏¢"
    ],
    "greeting": [
        "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ", "‡∏´‡∏ß‡∏±‡∏î‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö", "Hello", "Hi", "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡πà‡∏≤",
        "‡∏ó‡∏±‡∏Å‡∏Ñ‡∏£‡∏±‡∏ö", "‡∏î‡∏µ‡∏à‡πâ‡∏≤", "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏ï‡∏≠‡∏ô‡πÄ‡∏ä‡πâ‡∏≤", "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏ï‡∏≠‡∏ô‡πÄ‡∏¢‡πá‡∏ô", "‡πÄ‡∏Æ‡∏•‡πÇ‡∏´‡∏•",
        "‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö", "‡∏ó‡∏±‡∏Å‡πÜ", "Morning!", "Hey", "‡πÇ‡∏¢‡πà‡∏ß"
    ],
    "thank_you": [
        "‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏£‡∏±‡∏ö", "‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏°‡∏≤‡∏Å", "‡∏Ç‡∏≠‡∏ö‡πÉ‡∏à‡∏ô‡∏∞", "Thanks", "Thank you",
        "‡∏ã‡∏≤‡∏ö‡∏ã‡∏∂‡πâ‡∏á‡πÄ‡∏•‡∏¢", "‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•", "‡∏™‡∏∏‡∏î‡∏¢‡∏≠‡∏î‡πÄ‡∏•‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö", "‡∏î‡∏µ‡∏°‡∏≤‡∏Å‡πÄ‡∏•‡∏¢ ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì", "‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡∏ä‡πà‡∏ß‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö",
        "Thx", "tysm", "‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡πâ‡∏≤‡∏ö", "‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏á‡∏±‡∏ö", "‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ô‡∏∞‡∏Æ‡∏∞"
    ],
    "feedback": [
        "‡∏Ç‡∏≠‡∏á‡∏î‡∏µ‡∏°‡∏≤‡∏Å", "‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏î‡∏µ", "‡∏™‡πà‡∏á‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡πá‡∏ß", "‡∏õ‡∏£‡∏∞‡∏ó‡∏±‡∏ö‡πÉ‡∏à", "‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ñ‡∏π‡∏Å‡∏°‡∏≤‡∏Å",
        "‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏î‡∏µ", "‡∏Ç‡∏≠‡∏á‡∏ñ‡∏∂‡∏á‡πÑ‡∏ß", "‡∏≠‡∏¢‡∏≤‡∏Å‡πÉ‡∏´‡πâ‡∏°‡∏µ‡∏™‡∏µ‡∏≠‡∏∑‡πà‡∏ô‡∏ö‡πâ‡∏≤‡∏á", "‡∏≠‡∏¢‡∏≤‡∏Å‡πÉ‡∏´‡πâ‡∏õ‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏´‡πâ‡∏î‡∏µ‡∏Å‡∏ß‡πà‡∏≤‡∏ô‡∏µ‡πâ", "‡πÑ‡∏°‡πà‡∏Ñ‡πà‡∏≠‡∏¢‡∏û‡∏≠‡πÉ‡∏à‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£",
        "‡∏î‡∏µ‡∏°‡∏≤‡∏Å‡πÜ‡πÄ‡∏•‡∏¢", "‡∏≠‡∏¢‡∏≤‡∏Å‡πÉ‡∏´‡πâ‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°", "‡∏£‡∏∞‡∏ö‡∏ö‡∏•‡πà‡∏°‡∏ö‡πà‡∏≠‡∏¢", "‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô‡∏Å‡∏ß‡πà‡∏≤‡πÄ‡∏î‡∏¥‡∏°‡πÄ‡∏¢‡∏≠‡∏∞", "‡πÑ‡∏°‡πà‡πÇ‡∏≠‡πÄ‡∏Ñ‡πÄ‡∏•‡∏¢"
    ]
}

# ---------- Platform & Variation ----------
platforms = ["LINE", "Facebook", "Web", "Instagram"]
prefixes = ["", "‡πÅ‡∏≠‡∏î", "‡∏ö‡∏≠‡∏ó", "‡∏Ç‡∏≠‡∏´‡∏ô‡πà‡∏≠‡∏¢", "‡∏ä‡πà‡∏ß‡∏¢‡∏ó‡∏µ", "üôè", "üòä", "üòÖ", "‡∏Ñ‡∏£‡∏±‡∏ö", "‡∏Ñ‡πà‡∏∞"]
suffixes = ["", "‡∏Ñ‡∏£‡∏±‡∏ö", "‡∏Ñ‡πà‡∏∞", "‡∏ô‡∏∞", "‡πÑ‡∏î‡πâ‡πÑ‡∏´‡∏°", "‡∏´‡∏ô‡πà‡∏≠‡∏¢", "‡∏´‡∏ô‡πà‡∏≠‡∏¢‡∏™‡∏¥", "‡∏´‡∏ô‡πà‡∏≠‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö", "‡∏à‡πâ‡∏≤", "‡∏Æ‡∏∞"]

# keyword noise, typo patterns
typo_samples = {
    "‡∏Ñ‡∏£‡∏±‡∏ö": ["‡∏Ñ‡∏±‡∏ö", "‡∏Ñ‡∏£‡πâ‡∏≤‡∏ö", "‡∏Ñ‡πâ‡∏≤‡∏ö", "‡∏Ñ‡∏±‡πä‡∏ö"],
    "‡∏Ñ‡πà‡∏∞": ["‡∏Ñ‡∏∞", "‡∏Ñ‡πà‡∏≤", "‡∏Ç‡πà‡∏≤", "‡∏Ç‡πà‡∏∞"],
    "‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠": ["‡∏™‡∏±‡∏á‡∏ã‡∏∑‡πâ‡∏≠", "‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πà‡∏≠"],
    "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•": ["‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏ø", "‡∏Ç‡πâ‡∏≠‡∏°‡∏•", "‡∏Ç‡πâ‡∏≠‡∏°‡∏π", "info"],
    "‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì": ["‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ô", "‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏", "kobkun", "thx"]
}

# ---------- ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏•‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢ ----------
def random_typo(text):
    for k, vals in typo_samples.items():
        if k in text and random.random() < 0.3:
            text = text.replace(k, random.choice(vals))
    return text

def decorate_text(text):
    t = f"{random.choice(prefixes)} {text} {random.choice(suffixes)}".strip()
    t = random_typo(t)
    if random.random() < 0.1:
        t += random.choice([" üòÇ", " üòç", " üëç", " üôè", " ü§î"])
    return t

# ---------- ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ----------
rows = []
for intent, examples in intents.items():
    for _ in range(280):  # 7 intents * 280 ‚âà 1960 ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
        base_text = random.choice(examples)
        platform = random.choice(platforms)
        text = decorate_text(base_text)
        rows.append({
            "text": text,
            "intent": intent,
            "platform": platform
        })

# ---------- ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô DataFrame ----------
df = pd.DataFrame(rows)
df = df.sample(frac=1, random_state=42).reset_index(drop=True)

# ---------- ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ü‡∏•‡πå ----------
df.to_csv("Data/intents_dataset_v2.csv", index=False, encoding="utf-8-sig")

print("‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á dataset ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô:", len(df))
print(df.head(10))
