import streamlit as st
import json
import random
from utils.predict_intent import predict_intent
from langchain_community.chat_models import ChatOllama

# ===================== MOCK DATABASE =====================
MOCK_PRODUCTS = [
    {"product_id": 1, "product_name": "‡πÄ‡∏™‡∏∑‡πâ‡∏≠‡∏¢‡∏∑‡∏î‡∏™‡∏µ‡∏Ç‡∏≤‡∏ß", "description": "‡πÄ‡∏™‡∏∑‡πâ‡∏≠‡∏¢‡∏∑‡∏î‡∏Ñ‡∏≠‡∏Å‡∏•‡∏°‡∏ú‡πâ‡∏≤‡∏Ñ‡∏≠‡∏ï‡∏ï‡∏≠‡∏ô 100% ‡∏™‡∏µ‡∏Ç‡∏≤‡∏ß ‡πÉ‡∏™‡πà‡∏™‡∏ö‡∏≤‡∏¢", "price": 299, "stock": 50, "keywords": ["‡πÄ‡∏™‡∏∑‡πâ‡∏≠", "‡πÄ‡∏™‡∏∑‡πâ‡∏≠‡∏¢‡∏∑‡∏î", "‡∏™‡∏µ‡∏Ç‡∏≤‡∏ß", "‡∏ú‡πâ‡∏≤", "‡∏Ñ‡∏≠‡∏ï‡∏ï‡∏≠‡∏ô"]},
    {"product_id": 2, "product_name": "‡∏Å‡∏≤‡∏á‡πÄ‡∏Å‡∏á‡∏¢‡∏µ‡∏ô‡∏™‡πå", "description": "‡∏Å‡∏≤‡∏á‡πÄ‡∏Å‡∏á‡∏¢‡∏µ‡∏ô‡∏™‡πå‡∏Ç‡∏≤‡∏¢‡∏≤‡∏ß ‡∏ó‡∏£‡∏á‡∏™‡∏•‡∏¥‡∏° ‡∏™‡∏µ‡∏ô‡πâ‡∏≥‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏Ç‡πâ‡∏°", "price": 890, "stock": 30, "keywords": ["‡∏Å‡∏≤‡∏á‡πÄ‡∏Å‡∏á", "‡∏¢‡∏µ‡∏ô‡∏™‡πå", "‡∏Ç‡∏≤‡∏¢‡∏≤‡∏ß", "‡∏™‡∏•‡∏¥‡∏°", "‡∏ô‡πâ‡∏≥‡πÄ‡∏á‡∏¥‡∏ô"]},
    {"product_id": 3, "product_name": "‡∏£‡∏≠‡∏á‡πÄ‡∏ó‡πâ‡∏≤‡∏ú‡πâ‡∏≤‡πÉ‡∏ö", "description": "‡∏£‡∏≠‡∏á‡πÄ‡∏ó‡πâ‡∏≤‡∏ú‡πâ‡∏≤‡πÉ‡∏ö‡∏™‡∏µ‡∏î‡∏≥ ‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡πÄ‡∏ö‡∏≤ ‡πÉ‡∏™‡πà‡∏™‡∏ö‡∏≤‡∏¢", "price": 1290, "stock": 20, "keywords": ["‡∏£‡∏≠‡∏á‡πÄ‡∏ó‡πâ‡∏≤", "‡∏ú‡πâ‡∏≤‡πÉ‡∏ö", "‡∏™‡∏µ‡∏î‡∏≥", "‡πÄ‡∏ö‡∏≤"]},
    {"product_id": 4, "product_name": "‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤‡∏™‡∏∞‡∏û‡∏≤‡∏¢‡∏Ç‡πâ‡∏≤‡∏á", "description": "‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤‡∏ú‡πâ‡∏≤‡πÅ‡∏Ñ‡∏ô‡∏ß‡∏≤‡∏™ ‡∏Ç‡∏ô‡∏≤‡∏î‡∏Å‡∏•‡∏≤‡∏á ‡∏™‡∏∞‡∏û‡∏≤‡∏¢‡∏Ç‡πâ‡∏≤‡∏á‡∏™‡∏ö‡∏≤‡∏¢", "price": 450, "stock": 15, "keywords": ["‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤", "‡∏™‡∏∞‡∏û‡∏≤‡∏¢", "‡πÅ‡∏Ñ‡∏ô‡∏ß‡∏≤‡∏™"]},
    {"product_id": 5, "product_name": "‡∏´‡∏°‡∏ß‡∏Å‡πÅ‡∏Å‡πä‡∏õ", "description": "‡∏´‡∏°‡∏ß‡∏Å‡πÅ‡∏Å‡πä‡∏õ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡πÑ‡∏î‡πâ ‡∏ú‡πâ‡∏≤‡∏Ñ‡∏≠‡∏ï‡∏ï‡∏≠‡∏ô", "price": 250, "stock": 40, "keywords": ["‡∏´‡∏°‡∏ß‡∏Å", "‡πÅ‡∏Å‡πä‡∏õ", "‡∏Ñ‡∏≠‡∏ï‡∏ï‡∏≠‡∏ô"]},
]

MOCK_ORDERS = {
    "U1234567890": [
        {"order_id": "ORD001", "product_name": "‡πÄ‡∏™‡∏∑‡πâ‡∏≠‡∏¢‡∏∑‡∏î‡∏™‡∏µ‡∏Ç‡∏≤‡∏ß", "status": "‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡πÅ‡∏•‡πâ‡∏ß", "created_at": "2025-10-15 10:30:00"},
    ],
    "default": [
        {"order_id": "ORD999", "product_name": "‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á", "status": "‡∏£‡∏≠‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô", "created_at": "2025-10-17 09:00:00"},
    ],
}

# ===================== ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Ollama =====================
local_model = "llama3.1"
llm = ChatOllama(model=local_model)

# ===================== Streamlit UI =====================
st.set_page_config(page_title="Thai Chatbot E-Commerce", page_icon="üõçÔ∏è", layout="centered")
st.title("üõçÔ∏è Thai E-Commerce Chatbot")
st.caption("‡∏£‡∏∞‡∏ö‡∏ö‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏Ç‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå (Intent + Ollama + Streamlit)")

# ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö intent
with open("intent_responses.json", "r", encoding="utf-8") as f:
    responses = json.load(f)

# ‡πÄ‡∏Å‡πá‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÅ‡∏ä‡∏ó
if "chat_history" not in st.session_state:
    st.session_state.chat_history = []

# ===================== ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô =====================
def get_response(intent):
    if intent in responses:
        return random.choice(responses[intent])
    return random.choice(responses["unknown"])

def search_product(text):
    result = [p for p in MOCK_PRODUCTS if any(k in text for k in p["keywords"])]
    return result

def get_order(user_id="default"):
    return MOCK_ORDERS.get(user_id, MOCK_ORDERS["default"])

# ===================== Input ‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ =====================
user_input = st.chat_input("‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà...")

if user_input:
    # ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå intent
    intent = predict_intent(user_input)
    base_reply = get_response(intent)
    ai_reply = ""

    # ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏° intent ‡∏Å‡∏±‡∏ö mock database
    if intent == "search_product":
        products = search_product(user_input)
        if products:
            product_text = "\n".join([f"- {p['product_name']} ({p['price']} ‡∏ö‡∏≤‡∏ó)" for p in products])
            ai_reply = f"{base_reply}\n\n‡∏û‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏Å‡∏•‡πâ‡πÄ‡∏Ñ‡∏µ‡∏¢‡∏á:\n{product_text}"
        else:
            ai_reply = f"{base_reply}\n\n‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Ñ‡πà‡∏∞ üõí"

    elif intent == "check_order":
        orders = get_order("U1234567890")
        order_text = "\n".join([f"- ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ {o['order_id']} : {o['product_name']} ({o['status']})" for o in orders])
        ai_reply = f"{base_reply}\n\n{order_text}"

    else:
        # ‡πÉ‡∏ä‡πâ LLM Ollama ‡∏ä‡πà‡∏ß‡∏¢‡∏ï‡∏≠‡∏ö
        llm_response = llm.invoke(user_input)
        ai_reply = f"{base_reply}\n\nüí¨ {llm_response.content}"

    # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á session
    st.session_state.chat_history.append(("üßë‚Äçüí¨", user_input))
    st.session_state.chat_history.append(("ü§ñ", f"[{intent}] {ai_reply}"))

# ===================== ‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÅ‡∏ä‡∏ó =====================
for sender, msg in st.session_state.chat_history:
    bg_color = "#DCF8C6" if sender == "üßë‚Äçüí¨" else "#4A90E2"
    text_color = "#000000" if sender == "üßë‚Äçüí¨" else "#FFFFFF"
    st.markdown(
        f"<div style='background-color:{bg_color};color:{text_color};padding:10px;border-radius:8px;margin-bottom:5px;'>"
        f"<strong>{sender}</strong>: {msg}</div>",
        unsafe_allow_html=True,
    )
